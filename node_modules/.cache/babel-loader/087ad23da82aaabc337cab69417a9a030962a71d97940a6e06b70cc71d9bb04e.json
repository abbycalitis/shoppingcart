{"ast":null,"code":"export default {\n  name: \"ShoppingCart\",\n  props: {\n    cart: Array\n  },\n  methods: {\n    updateQuantity(index, quantity) {\n      this.$emit(\"updateQuantity\", index, quantity);\n    },\n    removeItem(index) {\n      this.$emit(\"removeItem\", index);\n    }\n  },\n  computed: {\n    totalPrice() {\n      return this.cart.reduce((total, item) => total + item.product.price * item.quantity, 0);\n    }\n  }\n};","map":{"version":3,"names":["name","props","cart","Array","methods","updateQuantity","index","quantity","$emit","removeItem","computed","totalPrice","reduce","total","item","product","price"],"sources":["C:\\Users\\calit\\calitisvue\\activity3\\src\\components\\Cart.vue"],"sourcesContent":["<template>\r\n  <div class=\"shoppingCart\">\r\n    <h1>Your Cart</h1>\r\n    <div v-if=\"cart.length === 0\">Your cart is empty!\"</div>\r\n    <div v-else>\r\n      <div\r\n        v-for=\"(item, index) in cart\"\r\n        :key=\"item.product.id\"\r\n        class=\"cartItem\"\r\n      >\r\n        <div class=\"cartItemInfo\">\r\n          <div>\r\n            <b>{{ item.product.name }}</b>\r\n            <p>\r\n              ₱{{ item.product.price }}x\r\n              <input\r\n                class=\"itemQuantity\"\r\n                type=\"number\"\r\n                v-model.number=\"item.quantity\"\r\n                min=\"1\"\r\n                v-on:change=\"updateQuantity(index, item.quantity)\"\r\n              /><button class=\"removeItem\" v-on:click=\"removeItem(index)\">\r\n                Remove\r\n              </button>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"total-price\">Total Price: ₱ {{ totalPrice }}</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"ShoppingCart\",\r\n  props: {\r\n    cart: Array,\r\n  },\r\n  methods: {\r\n    updateQuantity(index, quantity) {\r\n      this.$emit(\"updateQuantity\", index, quantity);\r\n    },\r\n    removeItem(index) {\r\n      this.$emit(\"removeItem\", index);\r\n    },\r\n  },\r\n  computed: {\r\n    totalPrice() {\r\n      return this.cart.reduce(\r\n        (total, item) => total + item.product.price * item.quantity,\r\n        0\r\n      );\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.shoppingCart {\r\n  height: 500px; /* Set a fixed height for the cart */\r\n  width: 25%;\r\n  margin-top: 40px;\r\n  margin-left: 10px;\r\n  position: fixed;\r\n  right: 20px; /* Distance from the right side of the viewport */\r\n  z-index: 1000;\r\n  overflow-y: auto; /* Add vertical scroll if needed */\r\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\r\n  border-radius: 10px; /* Rounded corners */\r\n  padding: 20px; /* Add padding for better spacing inside the cart */\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2); /* Add a shadow for depth */\r\n}\r\n.shoppingCart h1 {\r\n  margin-top: 5px; /* Lessen the bottom margin */\r\n}\r\n.total-price {\r\n  margin-top: auto; /* Push total price to the bottom */\r\n}\r\n</style>\r\n"],"mappings":"AAkCA,eAAe;EACbA,IAAI,EAAE,cAAc;EACpBC,KAAK,EAAE;IACLC,IAAI,EAAEC;EACR,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAACC,KAAK,EAAEC,QAAQ,EAAE;MAC9B,IAAI,CAACC,KAAK,CAAC,gBAAgB,EAAEF,KAAK,EAAEC,QAAQ,CAAC;IAC/C,CAAC;IACDE,UAAUA,CAACH,KAAK,EAAE;MAChB,IAAI,CAACE,KAAK,CAAC,YAAY,EAAEF,KAAK,CAAC;IACjC;EACF,CAAC;EACDI,QAAQ,EAAE;IACRC,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACT,IAAI,CAACU,MAAM,CACrB,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAI,GAAIC,IAAI,CAACC,OAAO,CAACC,KAAI,GAAIF,IAAI,CAACP,QAAQ,EAC3D,CACF,CAAC;IACH;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}